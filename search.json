[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 wgpugd authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/benchmark.html","id":"just-open-and-close-the-device","dir":"Articles","previous_headings":"Benchmark","what":"Just open and close the device","title":"benchmark","text":"","code":"library(ggplot2)  file <- tempfile(fileext = '.png')  res <- bench::mark(   wgpugd = {     wgpugd::wgpugd(file, 10, 10)     dev.off()   },   ragg =  {     ragg::agg_png(file, 10, 10, unit = \"in\")     dev.off()   },   min_iterations = 30 )  res  autoplot(res)"},{"path":"/articles/benchmark.html","id":"actual-plotting","dir":"Articles","previous_headings":"Benchmark","what":"Actual plotting","title":"benchmark","text":"","code":"set.seed(10) dsamp <- diamonds[sample(nrow(diamonds), 1000), ]  p <- ggplot(dsamp, aes(carat, price)) +   geom_point(aes(colour = clarity))  res <- bench::mark(   wgpugd = {     wgpugd::wgpugd(file, 10, 10)     print(p)     dev.off()   },   ragg =  {     ragg::agg_png(file, 10, 10, unit = \"in\")     print(p)     dev.off()   },   min_iterations = 30 )  res  autoplot(res)"},{"path":"/articles/benchmark.html","id":"multiple-plotting","dir":"Articles","previous_headings":"Benchmark","what":"Multiple plotting","title":"benchmark","text":"","code":"set.seed(10) dsamp <- diamonds[sample(nrow(diamonds), 1000), ]  p <- ggplot(dsamp, aes(carat, price)) +   geom_point(aes(colour = clarity))  temp_dir <- tempfile() dir.create(temp_dir) file <- file.path(temp_dir, \"p%03d.png\")  res <- bench::mark(   wgpugd = {     wgpugd::wgpugd(file, 10, 10)     for (i in 1:50) {       print(p)     }     dev.off()   },   ragg =  {     ragg::agg_png(file, 10, 10, unit = \"in\")     for (i in 1:50) {       print(p)     }     dev.off()   },   min_iterations = 10 )  res  autoplot(res)"},{"path":"/articles/compare.html","id":"line","dir":"Articles","previous_headings":"","what":"Line","title":"Comparison with other graphics device","text":"","code":"do_line <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    a <- pi * 1:3 / 7   x <- sin(a)   y <- cos(a)   col <- c(\"red\", \"blue\", \"green\")   le <- c(\"round\", \"butt\", \"square\")      invisible(lapply(1:3, \\(i) {     grid::grid.lines(       x = 0.5 + c(-0.35 * x[i], 0.4 * x[i]),       y = 0.5 + c(-0.35 * y[i], 0.4 * y[i]),       gp = grid::gpar(         col  = col[i],         alpha = 0.5,         lwd = 50 + 24 * i,         lineend = le[i],         linemitre = 10.       )     )   }))    dev.off()      knitr::include_graphics(filename) }  do_line(agg) do_line(wgpugd)"},{"path":"/articles/compare.html","id":"rect","dir":"Articles","previous_headings":"","what":"Rect","title":"Comparison with other graphics device","text":"","code":"do_rect <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    grid::grid.rect(     x = c(0.8, 0.3),     y = c(0.8, 0.3),     width = c(0.8, 0.7),     height = c(0.8, 0.45),     gp = grid::gpar(       fill  = c(\"green\", \"blue\"),       col   = c(\"yellow\"),       lwd   = 40,       alpha = 0.5     )   )    dev.off()      knitr::include_graphics(filename) }  do_rect(agg) do_rect(wgpugd)"},{"path":"/articles/compare.html","id":"polygon","dir":"Articles","previous_headings":"","what":"Polygon","title":"Comparison with other graphics device","text":"?grid.polygon","code":"do_polygon <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    grid::grid.polygon(x = outer(c(0, .5, 1, .5), 5:1/5),                      y = outer(c(.5, 1, .5, 0), 5:1/5),                      id.lengths = rep(4, 5),                      gp = grid::gpar(fill = 1:5, alpha = 0.5))    dev.off()      knitr::include_graphics(filename) }  do_polygon(agg) do_polygon(wgpugd)"},{"path":"/articles/compare.html","id":"circle","dir":"Articles","previous_headings":"","what":"Circle","title":"Comparison with other graphics device","text":"","code":"do_circle <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    grid::grid.circle(     x = c(0.8, 0.3),     y = c(0.8, 0.3),     r = c(0.5, 0.7),     gp = grid::gpar(       fill  = c(\"green\", \"blue\"),       col   = c(\"yellow\"),       lwd   = 40,       alpha = 0.5     )   )   dev.off()      knitr::include_graphics(filename) }  do_circle(agg) do_circle(wgpugd)"},{"path":"/articles/compare.html","id":"text","dir":"Articles","previous_headings":"","what":"Text","title":"Comparison with other graphics device","text":"","code":"do_text <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    x <- y <- grid::unit(0.5, \"npc\")   grid::grid.points(x = x, y = y)   lapply(72 * 7 / 2 + (-2):2 * 20, function(x) {     grid::grid.lines(x = grid::unit(c(0, 1), \"npc\"), y = grid::unit(c(x, x), \"points\"))   })   grid::grid.text(label = \"gla\\nd\", hjust = 1, vjust = 0, gp = grid::gpar(cex = 5, col = \"red\"))   grid::grid.text(label = \"ve\\nrrr\\nrry\", hjust = 0, vjust = 1, gp = grid::gpar(cex = 5, col = \"blue\"))   grid::grid.text(label = \"rot\", x = 0.4, y = 0.4, hjust = 0.5, vjust = 0.5, rot = 30, gp = grid::gpar(cex = 5, col = \"green\", alpha = 0.4))   dev.off()      knitr::include_graphics(filename) }  do_text(agg) do_text(wgpugd) do_text2 <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    grid::grid.text(     x = grid::unit(0.5, \"npc\"),     y = grid::unit(0.5, \"npc\"),     label = \"d\",     hjust = 0.5,     vjust = 0,     gp = grid::gpar(col = \"brown\", cex = 24, fontfamily = \"Iosevka SS08\")   )      f <- function(x, ...) {     grid::grid.lines(       x = grid::unit(c(0, 1), \"npc\"),       y = grid::unit(rep(12, 2) * x, \"points\") + grid::unit(c(0.5, 0.5), \"npc\"),       gp = grid::gpar(...)     )     invisible(NULL)   }      lapply(1:20, f, lty = 5, col = \"purple\", alpha = 0.7)   lapply(0:2 * 10, f, col = \"black\")    dev.off()      knitr::include_graphics(filename) }  do_text2(agg) do_text2(wgpugd)"},{"path":"/articles/compare.html","id":"order-of-elements","dir":"Articles","previous_headings":"","what":"Order of elements","title":"Comparison with other graphics device","text":"","code":"do_order <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    grid::grid.circle(x = 0.3, r = 0.3, gp = grid::gpar(col = \"transparent\", fill = \"#FF000080\"))   grid::grid.circle(x = 0.7, r = 0.3, gp = grid::gpar(col = \"transparent\", fill = \"#00FF0080\"))   grid::grid.lines(y = 0.5,  gp = grid::gpar(col = \"#FFFF0080\", lwd = 60))   grid::grid.circle(y = 0.7, r = 0.3, gp = grid::gpar(col = \"transparent\", fill = \"#0000FF80\"))   grid::grid.lines(x = 0.8,  gp = grid::gpar(col = \"#FF00FF80\", lwd = 60))      dev.off()      knitr::include_graphics(filename) }  do_order(agg) do_order(wgpugd) do_order2 <- function(dev) {   filename <- knitr::fig_path(paste0(deparse(substitute(dev)), \".png\"))   dev(filename = filename)    col <- scales::alpha(\"red\", 0.7)   grid::grid.circle(x = 0.2, r = 0.2, gp = grid::gpar(col = col, fill = \"blue\", lwd = 40))   grid::grid.lines(y = 0.55, gp = grid::gpar(col = \"#00000088\", lwd = 50))   grid::grid.rect(width = 0.4, height = 0.4, gp = grid::gpar(fill = \"pink\"))   grid::grid.lines(y = 0.45, gp = grid::gpar(col = \"#00000088\", lwd = 60))   grid::grid.circle(x = 0.8, r = 0.2, gp = grid::gpar(fill = \"lightgreen\", lwd = 40))   grid::grid.lines(y = 0.35, gp = grid::gpar(col = \"#00000088\", lwd = 60))    dev.off()      knitr::include_graphics(filename) }  do_order2(agg) do_order2(wgpugd)"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hiroaki Yutani. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yutani H (2022). wgpugd: WebGPU Graphics Device R. https://yutannihilation.github.io/wgpugd/, https://github.com/yutannihilation/wgpugd.","code":"@Manual{,   title = {wgpugd: A WebGPU Graphics Device for R},   author = {Hiroaki Yutani},   year = {2022},   note = {https://yutannihilation.github.io/wgpugd/, https://github.com/yutannihilation/wgpugd}, }"},{"path":[]},{"path":[]},{"path":"/index.html","id":"what-is-webgpu","dir":"","previous_headings":"Overview","what":"What is WebGPU?","title":"A WebGPU Graphics Device for R","text":"WebGPU API exposes capabilities GPU hardware. name indicates, ’s primarily designed Web. However, ’s Web1.","code":""},{"path":"/index.html","id":"what-is-wgpu","dir":"","previous_headings":"Overview","what":"What is wgpu?","title":"A WebGPU Graphics Device for R","text":"name indicates, wgpugd package uses wgpu, pure-Rust implementation WebGPU standard. wgpu ’s behind WebGPU support Firefox Deno, widely used Rust’s graphics ecosystem.","code":""},{"path":"/index.html","id":"wait-rust-can-we-use-rust-in-r","dir":"","previous_headings":"Overview","what":"Wait, Rust…? Can we use Rust in R??","title":"A WebGPU Graphics Device for R","text":"Yes! extendr Rust framework interacting R.","code":""},{"path":"/index.html","id":"why-webgpu-for-r","dir":"","previous_headings":"Overview","what":"Why WebGPU for R?","title":"A WebGPU Graphics Device for R","text":"main motivation add post-effect graphics WebGPU Shader Language (WGSL). , course, power GPU simply contribute high performance!","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A WebGPU Graphics Device for R","text":"can install development version wgpugd like :","code":"devtools::install_github(\"yutannihilation/wgpugd\")"},{"path":"/index.html","id":"usages","dir":"","previous_headings":"","what":"Usages","title":"A WebGPU Graphics Device for R","text":"⚠️ wgpugd currently verrry early stage development! ⚠️","code":"library(wgpugd) library(ggplot2)  file <- knitr::fig_path('.png') wgpugd(file, 10, 10) # ragg::agg_png(file, 10, 10, unit = \"in\")  set.seed(10) dsamp <- diamonds[sample(nrow(diamonds), 1000), ]  ggplot(dsamp, aes(carat, price)) +   geom_point(aes(colour = clarity)) +   ggtitle(\"＼( 'ω')／ウオオオオオオアアアアーーーーッッッ！！！！\") +   theme(text = element_text(size = 30, family = \"Noto Sans JP\"))  dev.off() #> png  #>   2  knitr::include_graphics(file)"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"A WebGPU Graphics Device for R","text":"wgpugd uses extendr, Rust extension mechanism R, communicate actual graphics device implementation Rust R, access R’s graphics API Rust. curious developing Rust program wgpu, ’d recommend Learn Wgpu get started. lyon library “path tessellation,” necessary draw lines GPU.","code":""}]
